// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Mmp.Client.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Shop : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The caption property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Caption { get; set; }
#nullable restore
#else
        public string Caption { get; set; }
#endif
        /// <summary>The comment property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Comment { get; set; }
#nullable restore
#else
        public string Comment { get; set; }
#endif
        /// <summary>The createdByID property</summary>
        public long? CreatedByID { get; set; }
        /// <summary>The createdOn property</summary>
        public DateTimeOffset? CreatedOn { get; set; }
        /// <summary>The deletedByID property</summary>
        public long? DeletedByID { get; set; }
        /// <summary>The deletedOn property</summary>
        public DateTimeOffset? DeletedOn { get; set; }
        /// <summary>The id property</summary>
        public long? Id { get; set; }
        /// <summary>The isDeleted property</summary>
        public bool? IsDeleted { get; set; }
        /// <summary>The modifiedByID property</summary>
        public long? ModifiedByID { get; set; }
        /// <summary>The modifiedOn property</summary>
        public DateTimeOffset? ModifiedOn { get; set; }
        /// <summary>The name property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>The ownerUserID property</summary>
        public long? OwnerUserID { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Mmp.Client.Models.Shop"/> and sets the default values.
        /// </summary>
        public Shop()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Mmp.Client.Models.Shop"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Mmp.Client.Models.Shop CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Mmp.Client.Models.Shop();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "caption", n => { Caption = n.GetStringValue(); } },
                { "comment", n => { Comment = n.GetStringValue(); } },
                { "createdByID", n => { CreatedByID = n.GetLongValue(); } },
                { "createdOn", n => { CreatedOn = n.GetDateTimeOffsetValue(); } },
                { "deletedByID", n => { DeletedByID = n.GetLongValue(); } },
                { "deletedOn", n => { DeletedOn = n.GetDateTimeOffsetValue(); } },
                { "id", n => { Id = n.GetLongValue(); } },
                { "isDeleted", n => { IsDeleted = n.GetBoolValue(); } },
                { "modifiedByID", n => { ModifiedByID = n.GetLongValue(); } },
                { "modifiedOn", n => { ModifiedOn = n.GetDateTimeOffsetValue(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "ownerUserID", n => { OwnerUserID = n.GetLongValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("caption", Caption);
            writer.WriteStringValue("comment", Comment);
            writer.WriteLongValue("createdByID", CreatedByID);
            writer.WriteDateTimeOffsetValue("createdOn", CreatedOn);
            writer.WriteLongValue("deletedByID", DeletedByID);
            writer.WriteDateTimeOffsetValue("deletedOn", DeletedOn);
            writer.WriteLongValue("id", Id);
            writer.WriteBoolValue("isDeleted", IsDeleted);
            writer.WriteLongValue("modifiedByID", ModifiedByID);
            writer.WriteDateTimeOffsetValue("modifiedOn", ModifiedOn);
            writer.WriteStringValue("name", Name);
            writer.WriteLongValue("ownerUserID", OwnerUserID);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
